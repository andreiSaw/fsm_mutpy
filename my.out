[*] Start mutation process:
   - targets: avtomat
   - tests: test_avtomat
[*] 1 tests passed:
   - test_avtomat [0.00036 s]
[*] Start mutants generation and execution:
   - [#   1] AOR avtomat:
--------------------------------------------------------------------------------
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
- 44:         if self.z % 2 == 0:
+ 44:         if self.z * 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
--------------------------------------------------------------------------------
[0.01088 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#   2] AOR avtomat:
--------------------------------------------------------------------------------
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
- 48:         if self.z % 2 == 1:
+ 48:         if self.z * 2 == 1:
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
  52:
--------------------------------------------------------------------------------
[0.00894 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#   3] ASR avtomat:
--------------------------------------------------------------------------------
  29:         if inp == Value.B:
  30:             self.z = 0
  31:             return 1
  32:         if inp == Value.A3:
- 33:             self.z += 1
+ 33:             self.z -= 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
--------------------------------------------------------------------------------
[0.00776 s] survived
   - [#   4] ASR avtomat:
--------------------------------------------------------------------------------
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
- 36:             self.z += 1
+ 36:             self.z -= 1
  37:             self.state = States.Q
  38:             return 0
  39:
  40:     def _q(self, inp):
--------------------------------------------------------------------------------
[0.00627 s] survived
   - [#   5] ASR avtomat:
--------------------------------------------------------------------------------
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
- 46:                 self.z += 1
+ 46:                 self.z -= 1
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
  50:             self.state = States.P
--------------------------------------------------------------------------------
[0.00800 s] survived
   - [#   6] COI avtomat:
--------------------------------------------------------------------------------
  19:     __VALUE_INITIAL = 0
  20:     __STATES_INITIAL = States.P
  21:
  22:     def _input(self, var):
- 23:         if self.state == States.P:
+ 23:         if not (self.state == States.P):
  24:             return self._p(var)
  25:         if self.state == States.Q:
  26:             return self._q(var)
  27:
--------------------------------------------------------------------------------
[0.01317 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#   7] COI avtomat:
--------------------------------------------------------------------------------
  21:
  22:     def _input(self, var):
  23:         if self.state == States.P:
  24:             return self._p(var)
- 25:         if self.state == States.Q:
+ 25:         if not (self.state == States.Q):
  26:             return self._q(var)
  27:
  28:     def _p(self, inp):
  29:         if inp == Value.B:
--------------------------------------------------------------------------------
[0.00813 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#   8] COI avtomat:
--------------------------------------------------------------------------------
  25:         if self.state == States.Q:
  26:             return self._q(var)
  27:
  28:     def _p(self, inp):
- 29:         if inp == Value.B:
+ 29:         if not (inp == Value.B):
  30:             self.z = 0
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
--------------------------------------------------------------------------------
[0.01082 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#   9] COI avtomat:
--------------------------------------------------------------------------------
  28:     def _p(self, inp):
  29:         if inp == Value.B:
  30:             self.z = 0
  31:             return 1
- 32:         if inp == Value.A3:
+ 32:         if not (inp == Value.A3):
  33:             self.z += 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
--------------------------------------------------------------------------------
[0.00930 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  10] COI avtomat:
--------------------------------------------------------------------------------
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
- 35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
+ 35:         if not ((inp == Value.A0 or inp == Value.A1 or inp == Value.A2)):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
  39:
--------------------------------------------------------------------------------
[0.01012 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  11] COI avtomat:
--------------------------------------------------------------------------------
  37:             self.state = States.Q
  38:             return 0
  39:
  40:     def _q(self, inp):
- 41:         if inp == Value.B:
+ 41:         if not (inp == Value.B):
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
--------------------------------------------------------------------------------
[0.00944 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  12] COI avtomat:
--------------------------------------------------------------------------------
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
- 44:         if self.z % 2 == 0:
+ 44:         if not (self.z % 2 == 0):
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
--------------------------------------------------------------------------------
[0.01108 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  13] COI avtomat:
--------------------------------------------------------------------------------
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
- 45:             if (inp == Value.A1 or inp == Value.A3):
+ 45:             if not ((inp == Value.A1 or inp == Value.A3)):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
--------------------------------------------------------------------------------
[0.01223 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  14] COI avtomat:
--------------------------------------------------------------------------------
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
- 48:         if self.z % 2 == 1:
+ 48:         if not (self.z % 2 == 1):
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
  52:
--------------------------------------------------------------------------------
[0.01067 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  15] CRP avtomat:
--------------------------------------------------------------------------------
   1: from enum import Enum
   2:
   3:
   4: class Value(Enum):
-  5:     A0 = 0
+  5:     A0 = 1
   6:     A1 = 1
   7:     A2 = 2
   8:     A3 = 3
   9:     B = 4
--------------------------------------------------------------------------------
[0.00819 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  16] CRP avtomat:
--------------------------------------------------------------------------------
   2:
   3:
   4: class Value(Enum):
   5:     A0 = 0
-  6:     A1 = 1
+  6:     A1 = 2
   7:     A2 = 2
   8:     A3 = 3
   9:     B = 4
  10:
--------------------------------------------------------------------------------
[0.01053 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  17] CRP avtomat:
--------------------------------------------------------------------------------
   3:
   4: class Value(Enum):
   5:     A0 = 0
   6:     A1 = 1
-  7:     A2 = 2
+  7:     A2 = 3
   8:     A3 = 3
   9:     B = 4
  10:
  11:
--------------------------------------------------------------------------------
[0.00960 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  18] CRP avtomat:
--------------------------------------------------------------------------------
   4: class Value(Enum):
   5:     A0 = 0
   6:     A1 = 1
   7:     A2 = 2
-  8:     A3 = 3
+  8:     A3 = 4
   9:     B = 4
  10:
  11:
  12: class States(Enum):
--------------------------------------------------------------------------------
[0.01452 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  19] CRP avtomat:
--------------------------------------------------------------------------------
   5:     A0 = 0
   6:     A1 = 1
   7:     A2 = 2
   8:     A3 = 3
-  9:     B = 4
+  9:     B = 5
  10:
  11:
  12: class States(Enum):
  13:     P = 0
--------------------------------------------------------------------------------
[0.00925 s] survived
   - [#  20] CRP avtomat:
--------------------------------------------------------------------------------
   9:     B = 4
  10:
  11:
  12: class States(Enum):
- 13:     P = 0
+ 13:     P = 1
  14:     Q = 1
  15:
  16:
  17: class System:
--------------------------------------------------------------------------------
[0.00928 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  21] CRP avtomat:
--------------------------------------------------------------------------------
  10:
  11:
  12: class States(Enum):
  13:     P = 0
- 14:     Q = 1
+ 14:     Q = 2
  15:
  16:
  17: class System:
  18:
--------------------------------------------------------------------------------
[0.00725 s] survived
   - [#  22] CRP avtomat:
--------------------------------------------------------------------------------
  15:
  16:
  17: class System:
  18:
- 19:     __VALUE_INITIAL = 0
+ 19:     __VALUE_INITIAL = 1
  20:     __STATES_INITIAL = States.P
  21:
  22:     def _input(self, var):
  23:         if self.state == States.P:
--------------------------------------------------------------------------------
[0.00898 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  23] CRP avtomat:
--------------------------------------------------------------------------------
  26:             return self._q(var)
  27:
  28:     def _p(self, inp):
  29:         if inp == Value.B:
- 30:             self.z = 0
+ 30:             self.z = 1
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
--------------------------------------------------------------------------------
[0.01482 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  24] CRP avtomat:
--------------------------------------------------------------------------------
  27:
  28:     def _p(self, inp):
  29:         if inp == Value.B:
  30:             self.z = 0
- 31:             return 1
+ 31:             return 2
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
--------------------------------------------------------------------------------
[0.00813 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  25] CRP avtomat:
--------------------------------------------------------------------------------
  29:         if inp == Value.B:
  30:             self.z = 0
  31:             return 1
  32:         if inp == Value.A3:
- 33:             self.z += 1
+ 33:             self.z += 2
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
--------------------------------------------------------------------------------
[0.01166 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  26] CRP avtomat:
--------------------------------------------------------------------------------
  30:             self.z = 0
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
- 34:             return 1
+ 34:             return 2
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
--------------------------------------------------------------------------------
[0.00834 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  27] CRP avtomat:
--------------------------------------------------------------------------------
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
- 36:             self.z += 1
+ 36:             self.z += 2
  37:             self.state = States.Q
  38:             return 0
  39:
  40:     def _q(self, inp):
--------------------------------------------------------------------------------
[0.01199 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  28] CRP avtomat:
--------------------------------------------------------------------------------
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
- 38:             return 0
+ 38:             return 1
  39:
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
--------------------------------------------------------------------------------
[0.00969 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  29] CRP avtomat:
--------------------------------------------------------------------------------
  38:             return 0
  39:
  40:     def _q(self, inp):
  41:         if inp == Value.B:
- 42:             self.z = 1
+ 42:             self.z = 2
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
--------------------------------------------------------------------------------
[0.01072 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  30] CRP avtomat:
--------------------------------------------------------------------------------
  39:
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
- 43:             return 1
+ 43:             return 2
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
--------------------------------------------------------------------------------
[0.00976 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  31] CRP avtomat:
--------------------------------------------------------------------------------
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
- 44:         if self.z % 2 == 0:
+ 44:         if self.z % 3 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
--------------------------------------------------------------------------------
[0.01367 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  32] CRP avtomat:
--------------------------------------------------------------------------------
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
- 44:         if self.z % 2 == 0:
+ 44:         if self.z % 2 == 1:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
--------------------------------------------------------------------------------
[0.00842 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  33] CRP avtomat:
--------------------------------------------------------------------------------
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
- 46:                 self.z += 1
+ 46:                 self.z += 2
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
  50:             self.state = States.P
--------------------------------------------------------------------------------
[0.00771 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  34] CRP avtomat:
--------------------------------------------------------------------------------
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
- 47:             return 0
+ 47:             return 1
  48:         if self.z % 2 == 1:
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
--------------------------------------------------------------------------------
[0.00980 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  35] CRP avtomat:
--------------------------------------------------------------------------------
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
- 48:         if self.z % 2 == 1:
+ 48:         if self.z % 3 == 1:
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
  52:
--------------------------------------------------------------------------------
[0.00966 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  36] CRP avtomat:
--------------------------------------------------------------------------------
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
- 48:         if self.z % 2 == 1:
+ 48:         if self.z % 2 == 2:
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
  52:
--------------------------------------------------------------------------------
[0.00895 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  37] CRP avtomat:
--------------------------------------------------------------------------------
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
- 49:             self.z = 0
+ 49:             self.z = 1
  50:             self.state = States.P
  51:             return 1
  52:
  53:     def _reset(self):
--------------------------------------------------------------------------------
[0.01231 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  38] CRP avtomat:
--------------------------------------------------------------------------------
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
  50:             self.state = States.P
- 51:             return 1
+ 51:             return 2
  52:
  53:     def _reset(self):
  54:         assert isinstance(self, System)
  55:         self.z = System.__VALUE_INITIAL
--------------------------------------------------------------------------------
[0.01005 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  39] LCR avtomat:
--------------------------------------------------------------------------------
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
- 35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
+ 35:         if (inp == Value.A0 and inp == Value.A1 and inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
  39:
--------------------------------------------------------------------------------
[0.01008 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  40] LCR avtomat:
--------------------------------------------------------------------------------
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
- 45:             if (inp == Value.A1 or inp == Value.A3):
+ 45:             if (inp == Value.A1 and inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
--------------------------------------------------------------------------------
[0.01056 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  41] ROR avtomat:
--------------------------------------------------------------------------------
  19:     __VALUE_INITIAL = 0
  20:     __STATES_INITIAL = States.P
  21:
  22:     def _input(self, var):
- 23:         if self.state == States.P:
+ 23:         if self.state != States.P:
  24:             return self._p(var)
  25:         if self.state == States.Q:
  26:             return self._q(var)
  27:
--------------------------------------------------------------------------------
[0.00899 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  42] ROR avtomat:
--------------------------------------------------------------------------------
  21:
  22:     def _input(self, var):
  23:         if self.state == States.P:
  24:             return self._p(var)
- 25:         if self.state == States.Q:
+ 25:         if self.state != States.Q:
  26:             return self._q(var)
  27:
  28:     def _p(self, inp):
  29:         if inp == Value.B:
--------------------------------------------------------------------------------
[0.01295 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  43] ROR avtomat:
--------------------------------------------------------------------------------
  25:         if self.state == States.Q:
  26:             return self._q(var)
  27:
  28:     def _p(self, inp):
- 29:         if inp == Value.B:
+ 29:         if inp != Value.B:
  30:             self.z = 0
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
--------------------------------------------------------------------------------
[0.01383 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  44] ROR avtomat:
--------------------------------------------------------------------------------
  28:     def _p(self, inp):
  29:         if inp == Value.B:
  30:             self.z = 0
  31:             return 1
- 32:         if inp == Value.A3:
+ 32:         if inp != Value.A3:
  33:             self.z += 1
  34:             return 1
  35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
--------------------------------------------------------------------------------
[0.01037 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  45] ROR avtomat:
--------------------------------------------------------------------------------
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
- 35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
+ 35:         if (inp != Value.A0 or inp == Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
  39:
--------------------------------------------------------------------------------
[0.01039 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  46] ROR avtomat:
--------------------------------------------------------------------------------
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
- 35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
+ 35:         if (inp == Value.A0 or inp != Value.A1 or inp == Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
  39:
--------------------------------------------------------------------------------
[0.01029 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  47] ROR avtomat:
--------------------------------------------------------------------------------
  31:             return 1
  32:         if inp == Value.A3:
  33:             self.z += 1
  34:             return 1
- 35:         if (inp == Value.A0 or inp == Value.A1 or inp == Value.A2):
+ 35:         if (inp == Value.A0 or inp == Value.A1 or inp != Value.A2):
  36:             self.z += 1
  37:             self.state = States.Q
  38:             return 0
  39:
--------------------------------------------------------------------------------
[0.00967 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  48] ROR avtomat:
--------------------------------------------------------------------------------
  37:             self.state = States.Q
  38:             return 0
  39:
  40:     def _q(self, inp):
- 41:         if inp == Value.B:
+ 41:         if inp != Value.B:
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
--------------------------------------------------------------------------------
[0.01128 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  49] ROR avtomat:
--------------------------------------------------------------------------------
  40:     def _q(self, inp):
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
- 44:         if self.z % 2 == 0:
+ 44:         if self.z % 2 != 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
--------------------------------------------------------------------------------
[0.00969 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  50] ROR avtomat:
--------------------------------------------------------------------------------
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
- 45:             if (inp == Value.A1 or inp == Value.A3):
+ 45:             if (inp != Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
--------------------------------------------------------------------------------
[0.01165 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  51] ROR avtomat:
--------------------------------------------------------------------------------
  41:         if inp == Value.B:
  42:             self.z = 1
  43:             return 1
  44:         if self.z % 2 == 0:
- 45:             if (inp == Value.A1 or inp == Value.A3):
+ 45:             if (inp == Value.A1 or inp != Value.A3):
  46:                 self.z += 1
  47:             return 0
  48:         if self.z % 2 == 1:
  49:             self.z = 0
--------------------------------------------------------------------------------
[0.00887 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  52] ROR avtomat:
--------------------------------------------------------------------------------
  44:         if self.z % 2 == 0:
  45:             if (inp == Value.A1 or inp == Value.A3):
  46:                 self.z += 1
  47:             return 0
- 48:         if self.z % 2 == 1:
+ 48:         if self.z % 2 != 1:
  49:             self.z = 0
  50:             self.state = States.P
  51:             return 1
  52:
--------------------------------------------------------------------------------
[0.01027 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  53] ROR avtomat:
--------------------------------------------------------------------------------
  56:         self.state = System.__STATES_INITIAL
  57:
  58:     def process(self, seq):
  59:         self._reset()
- 60:         assert self.z == System.__VALUE_INITIAL
+ 60:         assert self.z != System.__VALUE_INITIAL
  61:         assert self.state == System.__STATES_INITIAL
  62:         output = []
  63:         for i in seq:
  64:             o = self._input(i)
--------------------------------------------------------------------------------
[0.00772 s] killed by test_hsi (test_avtomat.TestStringMethods)
   - [#  54] ROR avtomat:
--------------------------------------------------------------------------------
  57:
  58:     def process(self, seq):
  59:         self._reset()
  60:         assert self.z == System.__VALUE_INITIAL
- 61:         assert self.state == System.__STATES_INITIAL
+ 61:         assert self.state != System.__STATES_INITIAL
  62:         output = []
  63:         for i in seq:
  64:             o = self._input(i)
  65:             output.append(o)
--------------------------------------------------------------------------------
[0.00955 s] killed by test_hsi (test_avtomat.TestStringMethods)
[*] Mutation score [13.80269 s]: 90.7%
   - all: 54
   - killed: 49 (90.7%)
   - survived: 5 (9.3%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)